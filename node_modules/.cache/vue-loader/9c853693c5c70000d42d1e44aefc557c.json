{"remainingRequest":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\swiper\\Swiper.vue?vue&type=style&index=0&id=6397e481&scoped=true&lang=css&","dependencies":[{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\swiper\\Swiper.vue","mtime":1622867448907},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\css-loader\\index.js","mtime":1622945947168},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1622945959399},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\postcss-loader\\src\\index.js","mtime":1622945960708},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622945952771},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js","mtime":1622945959391}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* {\n  margin: 0px;\n  padding: 0px;\n}\n#mySwiper {\n  overflow: hidden;\n  position: relative;\n}\n\n.swiper {\n  display: flex;\n}\n.indicator {\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  bottom: 12px;\n  width: 100%;\n}\n.indicatorItem {\n  width: 8px;\n  height: 8px;\n  margin: 5px 3px;\n  border-radius: 50%;\n  background-color: #fff;\n}\n.active {\n  background-color: rgba(212, 62, 46, 1);\n}\n",{"version":3,"sources":["Swiper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Swiper.vue","sourceRoot":"src/components/common/swiper","sourcesContent":["<template>\n  <div id=\"mySwiper\">\n    <div\n      class=\"swiper\"\n      @touchstart=\"touchStart\"\n      @touchmove=\"touchMove\"\n      @touchend=\"touchEnd\"\n    >\n      <slot></slot>\n    </div>\n\n    <div class=\"indicator\">\n      <div\n        class=\"indicatorItem\"\n        v-for=\"(item, index) in slideCount\"\n        :key=\"index\"\n        :class=\"{ active: index === currentIndex - 1 }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Swiper\",\n  props: {},\n  data: function() {\n    return {\n      slideCount: 0,\n      interval: 3000,\n      imgWidth: 0, //swiper每张图片的宽度一样\n      swiperStyle: {}, //利用swiper的style对象来控制着“过渡”\n      currentIndex: 1, //记录当前滑动的下标\n      scrolling: false, //当用手触摸和移动时,则暂停滚动\n      animalDuration: 300, //切换一张图片0.3\n      showIndicator: true, //当只有一张图片时，不显示小点点\n      playTimer: null, //控制着计时器的开始与暂停\n      moveRatio: 0.25\n    };\n  },\n  methods: {\n    handleDom: function() {\n      let swiperEle = document.querySelector(\".swiper\");\n      let slideEles = document.getElementsByClassName(\"slide\");\n      this.slideCount = slideEles.length;\n      console.log(this.slideCount);\n      if (this.slideCount > 1) {\n        let cloneFirst = slideEles[0].cloneNode(true);\n        let cloneLast = slideEles[this.slideCount - 1].cloneNode(true);\n        swiperEle.insertBefore(cloneLast, slideEles[0]);\n        swiperEle.appendChild(cloneFirst);\n        console.log(slideEles);\n        this.imgWidth = swiperEle.offsetWidth;\n        this.swiperStyle = swiperEle.style;\n      }\n      //显示第一张图片（不是刚刚从最后面添加到前面的那张）\n      this.setTransform(-this.imgWidth);\n    },\n\n    startTimer: function() {\n      let that = this;\n      this.playTimer = setInterval(function() {\n        that.currentIndex++;\n        that.scrollContent(-that.currentIndex * that.imgWidth); //使用过渡实现移动轮播图，效果更舒适\n      }, that.interval);\n    },\n\n    setTransform: function(movePosition) {\n      //控制着轮播图向左右移动\n      this.swiperStyle.transform = `translateX(${movePosition}px)`;\n      this.swiperStyle[\"-webkit-transform\"] = `translateX(${movePosition}px)`;\n      this.swiperStyle[\"-ms-transform\"] = `translateX(${movePosition}px)`;\n    },\n\n    scrollContent: function(position) {\n      this.scrolling = true; //滚动时不能用手滑动图片\n      this.swiperStyle.transition = `transform ${this.animalDuration}ms ease`;\n      this.setTransform(position);\n      this.checkPosition();\n      this.scrolling = false;\n    },\n    checkPosition: function() {\n      //在确保“过渡”结束后再检查下标是否合理\n\n      let that = this;\n      setTimeout(function() {\n        that.swiperStyle.transition = \"0ms\";\n        if (that.currentIndex >= that.slideCount + 1) {\n          that.currentIndex = 1;\n          that.setTransform(-that.currentIndex * that.imgWidth); //当移动到最后一张，直接移动到第一张，不用过渡\n        } else if (that.currentIndex <= 0) {\n          that.currentIndex = that.slideCount;\n          that.setTransform(-that.currentIndex * that.imgWidth);\n        }\n      }, that.animalDuration);\n    },\n    touchStart: function(e) {\n      //如果图片正在滚动，则不能滑动图片\n      if (this.scrolling) return;\n      //滑动时，暂停计时器\n      this.stopTimer();\n      this.startX = e.touches[0].pageX; //记录手指进入屏幕的距离，用于判断划痕的距离判断是否滑动图片\n    },\n    touchMove: function(e) {\n      this.currentX = e.touches[0].pageX;\n      this.distance = this.currentX - this.startX;\n      let currentPosition = -this.currentIndex * this.imgWidth;\n      let moveDistance = this.distance + currentPosition;\n      this.setTransform(moveDistance);\n    },\n    touchEnd: function(e) {\n      let endDistance = Math.abs(this.distance); //取绝对值\n      let movePercentage = this.imgWidth * this.moveRatio; //当手指滑动到这个距离，则自动跳到下一张图片\n      if (this.distance === 0) {\n        return;\n      } else if (this.distance > 0 && endDistance > movePercentage) {\n        //this.distance>0 则说明手指向右滑\n        this.currentIndex--;\n      } else {\n        this.currentIndex++;\n      }\n      this.scrollContent(-this.currentIndex * this.imgWidth);\n      this.startTimer();\n    },\n    stopTimer: function() {\n      clearInterval(this.playTimer);\n    }\n  },\n  mounted: function() {\n    //1.操作dom，在前后添加slide\n    setTimeout(() => {\n      this.handleDom();\n      this.startTimer();\n    }, 200);\n  }\n}\n</script>\n\n<style scoped>\n* {\n  margin: 0px;\n  padding: 0px;\n}\n#mySwiper {\n  overflow: hidden;\n  position: relative;\n}\n\n.swiper {\n  display: flex;\n}\n.indicator {\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  bottom: 12px;\n  width: 100%;\n}\n.indicatorItem {\n  width: 8px;\n  height: 8px;\n  margin: 5px 3px;\n  border-radius: 50%;\n  background-color: #fff;\n}\n.active {\n  background-color: rgba(212, 62, 46, 1);\n}\n</style>\n"]}]}