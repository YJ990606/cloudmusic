{"remainingRequest":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\scroll\\Scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\scroll\\Scroll.vue","mtime":1622872090999},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622945952771},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\babel-loader\\lib\\index.js","mtime":1622945960944},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622945952771},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js","mtime":1622945959391}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport BScroll from \"better-scroll\";\n\nexport default {\n    name: \"Scroll\",\n    props: {\n        probeType: {\n            type: Number,\n            default: 0,\n        },\n        pullUpLoad: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    data() {\n        return {\n            scroll: null,\n        };\n    },\n    mounted() {\n        //1.创建BScroll对象\n        this.scroll = new BScroll(this.$refs.wrapper, {\n            probeType: this.probeType,\n            pullUpLoad: this.pullUpLoad,\n            //监听图片加载调用refresh()重新计算高度\n            observeDOM: true,\n            observeImage: true,\n            //使事件中的点击事件生效 click为false时 button可以监听点击而div不可以\n            click: true,\n            top: true,\n            //增加鼠标滚轮滚动\n            mouseWheel: true,\n        });\n        //2. 监听scroll滚动的位置 position表示位置坐标\n        if (this.probeType === 2 || this.probeType === 3) {\n            this.scroll.on(\"scroll\", (position) => {\n                this.$emit(\"scroll\", position);\n            });\n        }\n        //3.监听scroll滚动到底部后上拉事件\n        if (this.pullUpLoad) {\n            this.scroll.on(\"pullingUp\", () => {\n                this.$emit(\"pullingUp\");\n            });\n        }\n    },\n    created() {\n        this.$nextTick(() => {\n            if (!this.scroll) {\n                this.scroll = new BScroll(this.$refs.wrapper, {\n                    scrollX: true,\n                    eventPassthrough: \"vertical\",\n                });\n            }\n        });\n    },\n    methods: {\n        //从某一位置回到顶部\n        scrollTo(x, y, time = 300) {\n            this.scroll &&\n                this.scroll.scrollTo &&\n                this.scroll.scrollTo(x, y, time);\n        },\n        //结束上拉加载行为。此方法名不能与scroll中的finishPullUp()一样,否则识别不了scroll中的方法\n        finishpullup() {\n            this.scroll && this.scroll.finishPullUp();\n        },\n        getScrollY() {\n            return this.scroll ? this.scroll.y : 0;\n        },\n    },\n};\n",{"version":3,"sources":["Scroll.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scroll.vue","sourceRoot":"src/components/common/scroll","sourcesContent":["<template>\n    <div class=\"wrapper\" ref=\"wrapper\">\n        <div class=\"content\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    import BScroll from \"better-scroll\";\n\n    export default {\n        name: \"Scroll\",\n        props: {\n            probeType: {\n                type: Number,\n                default: 0,\n            },\n            pullUpLoad: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data() {\n            return {\n                scroll: null,\n            };\n        },\n        mounted() {\n            //1.创建BScroll对象\n            this.scroll = new BScroll(this.$refs.wrapper, {\n                probeType: this.probeType,\n                pullUpLoad: this.pullUpLoad,\n                //监听图片加载调用refresh()重新计算高度\n                observeDOM: true,\n                observeImage: true,\n                //使事件中的点击事件生效 click为false时 button可以监听点击而div不可以\n                click: true,\n                top: true,\n                //增加鼠标滚轮滚动\n                mouseWheel: true,\n            });\n            //2. 监听scroll滚动的位置 position表示位置坐标\n            if (this.probeType === 2 || this.probeType === 3) {\n                this.scroll.on(\"scroll\", (position) => {\n                    this.$emit(\"scroll\", position);\n                });\n            }\n            //3.监听scroll滚动到底部后上拉事件\n            if (this.pullUpLoad) {\n                this.scroll.on(\"pullingUp\", () => {\n                    this.$emit(\"pullingUp\");\n                });\n            }\n        },\n        created() {\n            this.$nextTick(() => {\n                if (!this.scroll) {\n                    this.scroll = new BScroll(this.$refs.wrapper, {\n                        scrollX: true,\n                        eventPassthrough: \"vertical\",\n                    });\n                }\n            });\n        },\n        methods: {\n            //从某一位置回到顶部\n            scrollTo(x, y, time = 300) {\n                this.scroll &&\n                    this.scroll.scrollTo &&\n                    this.scroll.scrollTo(x, y, time);\n            },\n            //结束上拉加载行为。此方法名不能与scroll中的finishPullUp()一样,否则识别不了scroll中的方法\n            finishpullup() {\n                this.scroll && this.scroll.finishPullUp();\n            },\n            getScrollY() {\n                return this.scroll ? this.scroll.y : 0;\n            },\n        },\n    };\n</script>\n\n<style scoped>\n</style>\n"]}]}