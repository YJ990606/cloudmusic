{"remainingRequest":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\babel-loader\\lib\\index.js!D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\scroll\\Scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\src\\components\\common\\scroll\\Scroll.vue","mtime":1622872090999},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622945952771},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\babel-loader\\lib\\index.js","mtime":1622945960944},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622945952771},{"path":"D:\\学习\\HBuilderX\\HBuilderXProject\\cloudmusic\\node_modules\\vue-loader\\lib\\index.js","mtime":1622945959391}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport BScroll from \"better-scroll\";\nexport default {\n  name: \"Scroll\",\n  props: {\n    probeType: {\n      type: Number,\n      default: 0\n    },\n    pullUpLoad: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      scroll: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    //1.创建BScroll对象\n    this.scroll = new BScroll(this.$refs.wrapper, {\n      probeType: this.probeType,\n      pullUpLoad: this.pullUpLoad,\n      //监听图片加载调用refresh()重新计算高度\n      observeDOM: true,\n      observeImage: true,\n      //使事件中的点击事件生效 click为false时 button可以监听点击而div不可以\n      click: true,\n      top: true,\n      //增加鼠标滚轮滚动\n      mouseWheel: true\n    }); //2. 监听scroll滚动的位置 position表示位置坐标\n\n    if (this.probeType === 2 || this.probeType === 3) {\n      this.scroll.on(\"scroll\", function (position) {\n        _this.$emit(\"scroll\", position);\n      });\n    } //3.监听scroll滚动到底部后上拉事件\n\n\n    if (this.pullUpLoad) {\n      this.scroll.on(\"pullingUp\", function () {\n        _this.$emit(\"pullingUp\");\n      });\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      if (!_this2.scroll) {\n        _this2.scroll = new BScroll(_this2.$refs.wrapper, {\n          scrollX: true,\n          eventPassthrough: \"vertical\"\n        });\n      }\n    });\n  },\n  methods: {\n    //从某一位置回到顶部\n    scrollTo: function scrollTo(x, y) {\n      var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n      this.scroll && this.scroll.scrollTo && this.scroll.scrollTo(x, y, time);\n    },\n    //结束上拉加载行为。此方法名不能与scroll中的finishPullUp()一样,否则识别不了scroll中的方法\n    finishpullup: function finishpullup() {\n      this.scroll && this.scroll.finishPullUp();\n    },\n    getScrollY: function getScrollY() {\n      return this.scroll ? this.scroll.y : 0;\n    }\n  }\n};",{"version":3,"sources":["Scroll.vue"],"names":[],"mappings":";;;;;;;;;AASA,OAAA,OAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAFA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AAAA;;AACA;AACA,SAAA,MAAA,GAAA,IAAA,OAAA,CAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,MAAA,SAAA,EAAA,KAAA,SADA;AAEA,MAAA,UAAA,EAAA,KAAA,UAFA;AAGA;AACA,MAAA,UAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA;AACA,MAAA,KAAA,EAAA,IAPA;AAQA,MAAA,GAAA,EAAA,IARA;AASA;AACA,MAAA,UAAA,EAAA;AAVA,KAAA,CAAA,CAFA,CAcA;;AACA,QAAA,KAAA,SAAA,KAAA,CAAA,IAAA,KAAA,SAAA,KAAA,CAAA,EAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,QAAA,EAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,QAAA;AACA,OAFA;AAGA,KAnBA,CAoBA;;;AACA,QAAA,KAAA,UAAA,EAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,WAAA,EAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,WAAA;AACA,OAFA;AAGA;AACA,GA3CA;AA4CA,EAAA,OA5CA,qBA4CA;AAAA;;AACA,SAAA,SAAA,CAAA,YAAA;AACA,UAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,IAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,gBAAA,EAAA;AAFA,SAAA,CAAA;AAIA;AACA,KAPA;AAQA,GArDA;AAsDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,CAFA,EAEA,CAFA,EAEA;AAAA,UAAA,IAAA,uEAAA,GAAA;AACA,WAAA,MAAA,IACA,KAAA,MAAA,CAAA,QADA,IAEA,KAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAFA;AAGA,KANA;AAOA;AACA,IAAA,YARA,0BAQA;AACA,WAAA,MAAA,IAAA,KAAA,MAAA,CAAA,YAAA,EAAA;AACA,KAVA;AAWA,IAAA,UAXA,wBAWA;AACA,aAAA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,CAAA,GAAA,CAAA;AACA;AAbA;AAtDA,CAAA","sourcesContent":["<template>\n    <div class=\"wrapper\" ref=\"wrapper\">\n        <div class=\"content\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    import BScroll from \"better-scroll\";\n\n    export default {\n        name: \"Scroll\",\n        props: {\n            probeType: {\n                type: Number,\n                default: 0,\n            },\n            pullUpLoad: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data() {\n            return {\n                scroll: null,\n            };\n        },\n        mounted() {\n            //1.创建BScroll对象\n            this.scroll = new BScroll(this.$refs.wrapper, {\n                probeType: this.probeType,\n                pullUpLoad: this.pullUpLoad,\n                //监听图片加载调用refresh()重新计算高度\n                observeDOM: true,\n                observeImage: true,\n                //使事件中的点击事件生效 click为false时 button可以监听点击而div不可以\n                click: true,\n                top: true,\n                //增加鼠标滚轮滚动\n                mouseWheel: true,\n            });\n            //2. 监听scroll滚动的位置 position表示位置坐标\n            if (this.probeType === 2 || this.probeType === 3) {\n                this.scroll.on(\"scroll\", (position) => {\n                    this.$emit(\"scroll\", position);\n                });\n            }\n            //3.监听scroll滚动到底部后上拉事件\n            if (this.pullUpLoad) {\n                this.scroll.on(\"pullingUp\", () => {\n                    this.$emit(\"pullingUp\");\n                });\n            }\n        },\n        created() {\n            this.$nextTick(() => {\n                if (!this.scroll) {\n                    this.scroll = new BScroll(this.$refs.wrapper, {\n                        scrollX: true,\n                        eventPassthrough: \"vertical\",\n                    });\n                }\n            });\n        },\n        methods: {\n            //从某一位置回到顶部\n            scrollTo(x, y, time = 300) {\n                this.scroll &&\n                    this.scroll.scrollTo &&\n                    this.scroll.scrollTo(x, y, time);\n            },\n            //结束上拉加载行为。此方法名不能与scroll中的finishPullUp()一样,否则识别不了scroll中的方法\n            finishpullup() {\n                this.scroll && this.scroll.finishPullUp();\n            },\n            getScrollY() {\n                return this.scroll ? this.scroll.y : 0;\n            },\n        },\n    };\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src/components/common/scroll"}]}